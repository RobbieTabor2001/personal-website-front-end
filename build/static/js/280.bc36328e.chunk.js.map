{"version":3,"file":"static/js/280.bc36328e.chunk.js","mappings":"kLAMA,MAAMA,EAAcC,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACrC,MAAM,IAAEG,EAAG,UAAEC,EAAS,OAAEC,GAAWJ,GAC5BK,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAeC,IAAoBF,EAAAA,EAAAA,WAAS,IAEnDG,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,EAAM,GAAAC,OAAMC,wBAAkC,sBAAAD,OAAqBE,mBAAmBZ,IACtFa,QAAiBC,MAAML,GACvBZ,QAAagB,EAASE,OAC5BZ,EAAYN,EAAKK,SAGnB,CAFE,MAAOc,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,GAEFE,EAAe,GACd,CAAClB,IAMJ,OACEmB,EAAAA,EAAAA,KAAA,OAEEC,UAAU,eACVC,QAASA,IAAMvB,EAAS,SAADY,OAAUT,IACjCqB,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAAUC,QAASpB,EAAgB,QAAU,QAASqB,SAErFxB,IAAYiB,EAAAA,EAAAA,KAAA,OAAKQ,IAAKzB,EAAU0B,IAAI,GAAGN,MAAO,CAAEC,MAAO,OAAQE,QAAS,SAAWI,OAXhEC,KACtBxB,GAAiB,EAAK,KAKfP,EAMD,EAyDV,EA3CoBgC,IAAiB,IAAhB,OAAEC,GAAQD,EAC7B,MAAMjC,GAAWmC,EAAAA,EAAAA,OACVC,EAAaC,IAAkB/B,EAAAA,EAAAA,UAAS,MACxCgC,EAAcC,IAAmBjC,EAAAA,EAAAA,UAAS,IAqBjD,OAnBAG,EAAAA,EAAAA,YAAU,KACR,MAAM+B,EAAeA,KACnB,MAAMC,EAAcC,OAAOC,WACvBF,EAAc,KAChBJ,EAAe,KACfE,EAAgB,IACPE,GAAe,KAAOA,EAAc,KAC7CJ,EAAe,KACfE,EAAgB,KAEhBF,EAAe,KACfE,EAAgB,GAClB,EAIF,OAFAC,IACAE,OAAOE,iBAAiB,SAAUJ,GAC3B,IAAME,OAAOG,oBAAoB,SAAUL,EAAa,GAC9D,KAGDnB,EAAAA,EAAAA,KAACyB,EAAAA,EAAO,CACNC,MAAOb,EACPE,YAAaA,EACbE,aAAcA,EACdU,OAASC,IAAU5B,EAAAA,EAAAA,KAACxB,EAAW,IAAKoD,EAAOjD,SAAUA,IACrDkD,WAAY,IACZ,E,aC7EN,MAsCA,EAtCwBC,KACtB,MAAMnD,GAAWmC,EAAAA,EAAAA,OACViB,EAAeC,IAAoB/C,EAAAA,EAAAA,UAAS,KAEnDG,EAAAA,EAAAA,YAAU,KACWC,WACjB,IACE,MAAMC,EAAM,GAAAC,OAAMC,wBAAkC,eACpDM,QAAQmC,IAAI3C,GACZ,MAAMI,QAAiBC,MAAML,GAC7B,IAAKI,EAASwC,GACZ,MAAM,IAAIC,MAAM,+BAElB,MAAMT,QAAchC,EAASE,OAC7BE,QAAQmC,IAAI,iBAAkBP,GAC9BM,EAAiBN,EAGnB,CAFE,MAAO7B,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,GAGFuC,EAAY,GACX,IAMH,OACEpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAI,CAACC,MAAM,mBAAmBC,YAAY,+BAA8BhC,UACvEiC,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,wBAAuBM,SAAA,EACpCP,EAAAA,EAAAA,KAAA,MAAAO,SAAI,sBACJP,EAAAA,EAAAA,KAACyC,EAAO,CAAC5B,OAAQkB,EAAeW,aARd5D,IACtBH,EAAS,SAADY,OAAUT,GAAS,QASpB,C","sources":["components/Gallery/ItemGallery.js","pages/ClothingGallery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Masonry } from 'masonic';\nimport { useNavigate } from 'react-router-dom';\n\n// MasonryCard component definition\nconst MasonryCard = ({ data, navigate }) => {\n  const { _id, imagePath, itemId } = data;\n  const [imageUrl, setImageUrl] = useState('');\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchImageUrl = async () => {\n      try {\n        const apiUrl = `${process.env.REACT_APP_API_BASE_URL}/api/s3/image-url/${encodeURIComponent(imagePath)}`;\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        setImageUrl(data.imageUrl);\n      } catch (error) {\n        console.error('Failed to fetch image URL:', error);\n      }\n    };\n    fetchImageUrl();\n  }, [imagePath]);\n\n  const handleImageLoad = () => {\n    setIsImageLoaded(true);\n  };\n\n  return (\n    <div\n      key={_id}\n      className=\"gallery-item\"\n      onClick={() => navigate(`/item/${itemId}`)}\n      style={{ width: '100%', margin: '0 auto', display: isImageLoaded ? 'block' : 'none' }}\n    >\n      {imageUrl && <img src={imageUrl} alt=\"\" style={{ width: '100%', display: 'block' }} onLoad={handleImageLoad} />}\n    </div>\n  );\n};\n\nMasonryCard.propTypes = {\n  data: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    imagePath: PropTypes.string.isRequired,\n    itemId: PropTypes.string.isRequired,\n  }).isRequired,\n  navigate: PropTypes.func.isRequired,\n};\n\n// ItemGallery component definition\nconst ItemGallery = ({ images }) => {\n  const navigate = useNavigate();\n  const [columnWidth, setColumnWidth] = useState(200);\n  const [columnGutter, setColumnGutter] = useState(10);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      const screenWidth = window.innerWidth;\n      if (screenWidth < 600) {\n        setColumnWidth(100);\n        setColumnGutter(1);\n      } else if (screenWidth >= 600 && screenWidth < 1000) {\n        setColumnWidth(150);\n        setColumnGutter(2);\n      } else {\n        setColumnWidth(200);\n        setColumnGutter(3);\n      }\n    };\n    updateLayout();\n    window.addEventListener('resize', updateLayout);\n    return () => window.removeEventListener('resize', updateLayout);\n  }, []);\n\n  return (\n    <Masonry\n      items={images}\n      columnWidth={columnWidth}\n      columnGutter={columnGutter}\n      render={(props) => <MasonryCard {...props} navigate={navigate} />}\n      overscanBy={10}\n    />\n  );\n};\n\nItemGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    imagePath: PropTypes.string.isRequired,\n    itemId: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default ItemGallery;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Gallery from '../components/Gallery/ItemGallery';\nimport Main from '../layouts/Main';\n\nconst ClothingGallery = () => {\n  const navigate = useNavigate();\n  const [galleryImages, setGalleryImages] = useState([]);\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const apiUrl = `${process.env.REACT_APP_API_BASE_URL}/api/images`; // Use environment variable for the API base URL\n        console.log(apiUrl)\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const items = await response.json();\n        console.log(\"Fetched items:\", items);\n        setGalleryImages(items);\n      } catch (error) {\n        console.error(\"Failed to fetch items:\", error);\n      }\n    };\n\n    fetchItems();\n  }, []);\n\n  const navigateToItem = (itemId) => {\n    navigate(`/item/${itemId}`);\n  };\n\n  return (\n    <Main title=\"Clothing Gallery\" description=\"Explore our clothing gallery\">\n      <div className=\"clothing-gallery-page\">\n        <h1>Clothing Gallery</h1>\n        <Gallery images={galleryImages} onImageClick={navigateToItem} />\n      </div>\n    </Main>\n  );\n};\n\nexport default ClothingGallery;\n"],"names":["MasonryCard","_ref","data","navigate","_id","imagePath","itemId","imageUrl","setImageUrl","useState","isImageLoaded","setIsImageLoaded","useEffect","async","apiUrl","concat","process","encodeURIComponent","response","fetch","json","error","console","fetchImageUrl","_jsx","className","onClick","style","width","margin","display","children","src","alt","onLoad","handleImageLoad","_ref2","images","useNavigate","columnWidth","setColumnWidth","columnGutter","setColumnGutter","updateLayout","screenWidth","window","innerWidth","addEventListener","removeEventListener","Masonry","items","render","props","overscanBy","ClothingGallery","galleryImages","setGalleryImages","log","ok","Error","fetchItems","Main","title","description","_jsxs","Gallery","onImageClick"],"sourceRoot":""}