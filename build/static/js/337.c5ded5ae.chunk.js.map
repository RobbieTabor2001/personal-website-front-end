{"version":3,"file":"static/js/337.c5ded5ae.chunk.js","mappings":"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","sources":["../node_modules/@react-hook/latest/dist/module/index.js","../node_modules/@react-hook/debounce/dist/module/index.js","../node_modules/@react-hook/event/dist/module/index.js","../node_modules/@react-hook/window-size/dist/module/index.js","../node_modules/@essentials/memoize-one/dist/module/index.js","../node_modules/@essentials/one-key-map/dist/module/index.js","../node_modules/trie-memoize/dist/module/index.js","../node_modules/masonic/dist/module/elements-cache.js","../node_modules/masonic/dist/module/use-force-update.js","../node_modules/masonic/dist/module/use-masonry.js","../node_modules/@essentials/raf/dist/module/index.js","../node_modules/@essentials/request-timeout/dist/module/index.js","../node_modules/@react-hook/throttle/dist/module/index.js","../node_modules/@react-hook/window-scroll/dist/module/index.js","../node_modules/masonic/dist/module/use-scroller.js","../node_modules/masonic/dist/module/masonry-scroller.js","../node_modules/@react-hook/passive-layout-effect/dist/module/index.js","../node_modules/masonic/dist/module/use-container-position.js","../node_modules/masonic/dist/module/interval-tree.js","../node_modules/masonic/dist/module/use-positioner.js","../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/utils/freeze.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/utils/process.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../node_modules/raf-schd/dist/raf-schd.esm.js","../node_modules/masonic/dist/module/use-resize-observer.js","../node_modules/masonic/dist/module/use-scroll-to-index.js","../node_modules/masonic/dist/module/masonry.js"],"sourcesContent":["import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\n\nexport default useLatest;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nexport const useDebounceCallback = (callback, wait = 100, leading = false) => {\n  const storedCallback = useLatest(callback);\n  const timeout = React.useRef();\n  const deps = [wait, leading, storedCallback]; // Cleans up pending timeouts when the deps change\n\n  function _ref() {\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = void 0;\n  }\n\n  React.useEffect(() => _ref, deps);\n\n  function _ref2() {\n    timeout.current = void 0;\n  }\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const {\n      current\n    } = timeout; // Calls on leading edge\n\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(_ref2, wait); // eslint-disable-next-line prefer-spread\n\n      return storedCallback.current.apply(null, args);\n    } // Clear the timeout every call and start waiting again\n\n\n    current && clearTimeout(current); // Waits for `wait` before invoking the callback\n\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0;\n      storedCallback.current.apply(null, args);\n    }, wait);\n  }, deps);\n};\nexport const useDebounce = (initialState, wait, leading) => {\n  const state = React.useState(initialState);\n  return [state[0], useDebounceCallback(state[1], wait, leading)];\n};","import * as React from 'react';\n\nfunction useEvent(target, type, listener, cleanup) {\n  const storedListener = React.useRef(listener);\n  const storedCleanup = React.useRef(cleanup);\n  React.useEffect(() => {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  React.useEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    let didUnsubscribe = 0;\n\n    function listener(...args) {\n      if (didUnsubscribe) return;\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    const cleanup = storedCleanup.current;\n    return () => {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;","import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\nconst wv = win && typeof win.visualViewport !== 'undefined' ? win.visualViewport : null;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = function (options) {\n  if (options === void 0) {\n    options = emptyObj;\n  }\n\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize); // @ts-expect-error\n\n  useEvent(wv, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];","const memoOne = (fn, areEqual) => {\n  const equal = areEqual || defaultAreEqual;\n  let args, value;\n  return function () {\n    return !!args && equal(arguments, args) ? value : value = fn.apply(null, args = arguments);\n  };\n};\n\nexport default memoOne;\n\nconst defaultAreEqual = (current, prev) => current[0] === prev[0] && current[1] === prev[1] && current[2] === prev[2] && current[3] === prev[3];","class OneKeyMap {\n  constructor() {\n    this.set = void 0;\n    this.get = void 0;\n    let key, val;\n\n    this.get = k => k === key ? val : void 0;\n\n    this.set = (k, v) => {\n      key = k;\n      val = v;\n    };\n  }\n\n}\n\nexport default OneKeyMap;","const createCache = obj => {\n  try {\n    // @ts-ignore\n    return new obj();\n  } catch (e) {\n    const cache = {};\n    return {\n      set(k, v) {\n        cache[k] = v;\n      },\n\n      get(k) {\n        return cache[k];\n      }\n\n    };\n  }\n};\n\nconst memo = constructors => {\n  const depth = constructors.length,\n        baseCache = createCache(constructors[0]);\n  let base;\n  let map;\n  let i;\n  let node;\n  const one = depth === 1; // quicker access for one and two-argument functions\n\n  const g1 = args => (base = baseCache.get(args[0])) === void 0 || one ? base : base.get(args[1]);\n\n  const s1 = (args, value) => {\n    if (one) baseCache.set(args[0], value);else {\n      if ((base = baseCache.get(args[0])) === void 0) {\n        map = createCache(constructors[1]);\n        map.set(args[1], value);\n        baseCache.set(args[0], map);\n      } else {\n        base.set(args[1], value);\n      }\n    }\n    return value;\n  };\n\n  const g2 = args => {\n    node = baseCache;\n\n    for (i = 0; i < depth; i++) if ((node = node.get(args[i])) === void 0) return;\n\n    return node;\n  };\n\n  const s2 = (args, value) => {\n    node = baseCache;\n\n    for (i = 0; i < depth - 1; i++) {\n      if ((map = node.get(args[i])) === void 0) {\n        map = createCache(constructors[i + 1]);\n        node.set(args[i], map);\n        node = map;\n      } else {\n        node = map;\n      }\n    }\n\n    node.set(args[depth - 1], value);\n    return value;\n  };\n\n  return depth < 3 ? {\n    g: g1,\n    s: s1\n  } : {\n    g: g2,\n    s: s2\n  };\n};\n\nconst memoize = (mapConstructors, fn) => {\n  let item;\n  const {\n    g,\n    s\n  } = memo(mapConstructors);\n  return function () {\n    return (item = g(arguments)) === void 0 ? s(arguments, fn.apply(null, arguments)) : item;\n  };\n};\n\nexport default memoize;","export const elementsCache = /*#__PURE__*/new WeakMap();","import * as React from \"react\";\nexport function useForceUpdate() {\n  const setState = React.useState(emptyObj)[1];\n  return React.useRef(() => setState({})).current;\n}\nconst emptyObj = {};","import memoizeOne from \"@essentials/memoize-one\";\nimport OneKeyMap from \"@essentials/one-key-map\";\nimport useLatest from \"@react-hook/latest\";\nimport * as React from \"react\";\nconst __reactCreateElement__ = React.createElement;\nimport trieMemoize from \"trie-memoize\";\nimport { elementsCache } from \"./elements-cache\";\nimport { useForceUpdate } from \"./use-force-update\";\n\n/**\n * This hook handles the render phases of the masonry layout and returns the grid as a React element.\n *\n * @param options - Options for configuring the masonry layout renderer. See `UseMasonryOptions`.\n * @param options.positioner\n * @param options.resizeObserver\n * @param options.items\n * @param options.as\n * @param options.id\n * @param options.className\n * @param options.style\n * @param options.role\n * @param options.tabIndex\n * @param options.containerRef\n * @param options.itemAs\n * @param options.itemStyle\n * @param options.itemHeightEstimate\n * @param options.itemKey\n * @param options.overscanBy\n * @param options.scrollTop\n * @param options.isScrolling\n * @param options.height\n * @param options.render\n * @param options.onRender\n */\nexport function useMasonry(_ref) {\n  let {\n    // Measurement and layout\n    positioner,\n    resizeObserver,\n    // Grid items\n    items,\n    // Container props\n    as: ContainerComponent = \"div\",\n    id,\n    className,\n    style,\n    role = \"grid\",\n    tabIndex = 0,\n    containerRef,\n    // Item props\n    itemAs: ItemComponent = \"div\",\n    itemStyle,\n    itemHeightEstimate = 300,\n    itemKey = defaultGetItemKey,\n    // Rendering props\n    overscanBy = 2,\n    scrollTop,\n    isScrolling,\n    height,\n    render: RenderComponent,\n    onRender\n  } = _ref;\n  let startIndex = 0;\n  let stopIndex;\n  const forceUpdate = useForceUpdate();\n  const setItemRef = getRefSetter(positioner, resizeObserver);\n  const itemCount = items.length;\n  const {\n    columnWidth,\n    columnCount,\n    range,\n    estimateHeight,\n    size,\n    shortestColumn\n  } = positioner;\n  const measuredCount = size();\n  const shortestColumnSize = shortestColumn();\n  const children = [];\n  const itemRole = role === \"list\" ? \"listitem\" : role === \"grid\" ? \"gridcell\" : undefined;\n  const storedOnRender = useLatest(onRender);\n  overscanBy = height * overscanBy;\n  const rangeEnd = scrollTop + overscanBy;\n  const needsFreshBatch = shortestColumnSize < rangeEnd && measuredCount < itemCount;\n  range( // We overscan in both directions because users scroll both ways,\n  // though one must admit scrolling down is more common and thus\n  // we only overscan by half the downward overscan amount\n  Math.max(0, scrollTop - overscanBy / 2), rangeEnd, (index, left, top) => {\n    const data = items[index];\n    const key = itemKey(data, index);\n    const phaseTwoStyle = {\n      top,\n      left,\n      width: columnWidth,\n      writingMode: \"horizontal-tb\",\n      position: \"absolute\"\n    };\n    /* istanbul ignore next */\n\n    if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n      throwWithoutData(data, index);\n    }\n\n    children.push( /*#__PURE__*/__reactCreateElement__(ItemComponent, {\n      key: key,\n      ref: setItemRef(index),\n      role: itemRole,\n      style: typeof itemStyle === \"object\" && itemStyle !== null ? Object.assign({}, phaseTwoStyle, itemStyle) : phaseTwoStyle\n    }, createRenderElement(RenderComponent, index, data, columnWidth)));\n\n    if (stopIndex === void 0) {\n      startIndex = index;\n      stopIndex = index;\n    } else {\n      startIndex = Math.min(startIndex, index);\n      stopIndex = Math.max(stopIndex, index);\n    }\n  });\n\n  if (needsFreshBatch) {\n    const batchSize = Math.min(itemCount - measuredCount, Math.ceil((scrollTop + overscanBy - shortestColumnSize) / itemHeightEstimate * columnCount));\n    let index = measuredCount;\n    const phaseOneStyle = getCachedSize(columnWidth);\n\n    for (; index < measuredCount + batchSize; index++) {\n      const data = items[index];\n      const key = itemKey(data, index);\n      /* istanbul ignore next */\n\n      if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n        throwWithoutData(data, index);\n      }\n\n      children.push( /*#__PURE__*/__reactCreateElement__(ItemComponent, {\n        key: key,\n        ref: setItemRef(index),\n        role: itemRole,\n        style: typeof itemStyle === \"object\" ? Object.assign({}, phaseOneStyle, itemStyle) : phaseOneStyle\n      }, createRenderElement(RenderComponent, index, data, columnWidth)));\n    }\n  } // Calls the onRender callback if the rendered indices changed\n\n\n  React.useEffect(() => {\n    if (typeof storedOnRender.current === \"function\" && stopIndex !== void 0) storedOnRender.current(startIndex, stopIndex, items);\n    didEverMount = \"1\";\n  }, [startIndex, stopIndex, items, storedOnRender]); // If we needed a fresh batch we should reload our components with the measured\n  // sizes\n\n  React.useEffect(() => {\n    if (needsFreshBatch) forceUpdate(); // eslint-disable-next-line\n  }, [needsFreshBatch, positioner]); // gets the container style object based upon the estimated height and whether or not\n  // the page is being scrolled\n\n  const containerStyle = getContainerStyle(isScrolling, estimateHeight(itemCount, itemHeightEstimate));\n  return /*#__PURE__*/__reactCreateElement__(ContainerComponent, {\n    ref: containerRef,\n    key: didEverMount,\n    id: id,\n    role: role,\n    className: className,\n    tabIndex: tabIndex,\n    style: typeof style === \"object\" ? assignUserStyle(containerStyle, style) : containerStyle,\n    children: children\n  });\n}\n/* istanbul ignore next */\n\nfunction throwWithoutData(data, index) {\n  if (!data) {\n    throw new Error(`No data was found at index: ${index}\\n\\n` + `This usually happens when you've mutated or changed the \"items\" array in a ` + `way that makes it shorter than the previous \"items\" array. Masonic knows nothing ` + `about your underlying data and when it caches cell positions, it assumes you aren't ` + `mutating the underlying \"items\".\\n\\n` + `See https://codesandbox.io/s/masonic-w-react-router-example-2b5f9?file=/src/index.js for ` + `an example that gets around this limitations. For advanced implementations, see ` + `https://codesandbox.io/s/masonic-w-react-router-and-advanced-config-example-8em42?file=/src/index.js\\n\\n` + `If this was the result of your removing an item from your \"items\", see this issue: ` + `https://github.com/jaredLunde/masonic/issues/12`);\n  }\n} // This is for triggering a remount after SSR has loaded in the client w/ hydrate()\n\n\nlet didEverMount = \"0\";\n//\n// Render-phase utilities\n// ~5.5x faster than createElement without the memo\nconst createRenderElement = /*#__PURE__*/trieMemoize([OneKeyMap, {}, WeakMap, OneKeyMap], (RenderComponent, index, data, columnWidth) => /*#__PURE__*/__reactCreateElement__(RenderComponent, {\n  index: index,\n  data: data,\n  width: columnWidth\n}));\nconst getContainerStyle = /*#__PURE__*/memoizeOne((isScrolling, estimateHeight) => ({\n  position: \"relative\",\n  width: \"100%\",\n  maxWidth: \"100%\",\n  height: Math.ceil(estimateHeight),\n  maxHeight: Math.ceil(estimateHeight),\n  willChange: isScrolling ? \"contents\" : void 0,\n  pointerEvents: isScrolling ? \"none\" : void 0\n}));\n\nconst cmp2 = (args, pargs) => args[0] === pargs[0] && args[1] === pargs[1];\n\nconst assignUserStyle = /*#__PURE__*/memoizeOne((containerStyle, userStyle) => Object.assign({}, containerStyle, userStyle), // @ts-expect-error\ncmp2);\n\nfunction defaultGetItemKey(_, i) {\n  return i;\n} // the below memoizations for for ensuring shallow equal is reliable for pure\n// component children\n\n\nconst getCachedSize = /*#__PURE__*/memoizeOne(width => ({\n  width,\n  zIndex: -1000,\n  visibility: \"hidden\",\n  position: \"absolute\",\n  writingMode: \"horizontal-tb\"\n}), (args, pargs) => args[0] === pargs[0]);\nconst getRefSetter = /*#__PURE__*/memoizeOne((positioner, resizeObserver) => index => el => {\n  if (el === null) return;\n\n  if (resizeObserver) {\n    resizeObserver.observe(el);\n    elementsCache.set(el, index);\n  }\n\n  if (positioner.get(index) === void 0) positioner.set(index, el.offsetHeight);\n}, // @ts-expect-error\ncmp2);","let u = 'undefined',\n    win = typeof window !== u ? window : {},\n    p = typeof performance !== u ? performance : Date,\n    now = () => p.now(),\n    af = 'AnimationFrame',\n    Caf = 'cancel' + af,\n    Raf = 'request' + af,\n    raf = win[Raf] && /*#__PURE__*/win[Raf].bind(win),\n    caf = win[Caf] && /*#__PURE__*/win[Caf].bind(win);\n\nfunction _ref(h) {\n  return clearTimeout(h);\n}\n\nif (!raf || !caf) {\n  let lastTime = 0;\n\n  raf = callback => {\n    let curr = now(),\n        next = Math.max(lastTime + 1000 / 60, curr);\n    return setTimeout(() => {\n      callback(lastTime = next);\n    }, next - curr);\n  };\n\n  caf = _ref;\n}\n\nexport { raf, caf, now };","/**\n * Copyright 2011, Joe Lambert.\n * Free to use under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n **/\nimport { raf, caf, now } from '@essentials/raf';\nexport const clearRequestTimeout = handle => {\n  caf(handle.v || -1);\n};\nexport const requestTimeout = (fn, ms) => {\n  const start = now(),\n        handle = {};\n\n  const loop = () => {\n    now() - start >= ms ? fn.call(null) : handle.v = raf(loop);\n  };\n\n  handle.v = raf(loop);\n  return handle;\n};\nexport default requestTimeout;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nconst perf = typeof performance !== 'undefined' ? performance : Date;\n\nconst now = () => perf.now();\n\nexport function useThrottleCallback(callback, fps = 30, leading = false) {\n  const storedCallback = useLatest(callback);\n  const ms = 1000 / fps;\n  const prev = React.useRef(0);\n  const trailingTimeout = React.useRef();\n\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  const deps = [fps, leading, storedCallback]; // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0;\n    clearTrailing();\n  }\n\n  React.useEffect(() => _ref, deps);\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const rightNow = now();\n\n    const call = () => {\n      prev.current = rightNow;\n      clearTrailing();\n      storedCallback.current.apply(null, args);\n    };\n\n    const current = prev.current; // leading\n\n    if (leading && current === 0) return call(); // body\n\n    if (rightNow - current > ms) {\n      if (current > 0) return call();\n      prev.current = rightNow;\n    } // trailing\n\n\n    clearTrailing();\n    trailingTimeout.current = setTimeout(() => {\n      call();\n      prev.current = 0;\n    }, ms);\n  }, deps);\n}\nexport function useThrottle(initialState, fps, leading) {\n  const state = React.useState(initialState);\n  return [state[0], useThrottleCallback(state[1], fps, leading)];\n}","import { useThrottle } from '@react-hook/throttle';\nimport useEvent from '@react-hook/event';\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getScrollY = () => win.scrollY !== void 0 ? win.scrollY : win.pageYOffset === void 0 ? 0 : win.pageYOffset;\n\nexport const useWindowScroll = (fps = 30) => {\n  const state = useThrottle(typeof window === 'undefined' ? 0 : getScrollY, fps, true);\n  useEvent(win, 'scroll', () => state[1](getScrollY()));\n  return state[0];\n};\nexport default useWindowScroll;","import { clearRequestTimeout, requestTimeout } from \"@essentials/request-timeout\";\nimport useScrollPosition from \"@react-hook/window-scroll\";\nimport * as React from \"react\";\n/**\n * A hook for tracking whether the `window` is currently being scrolled and it's scroll position on\n * the y-axis. These values are used for determining which grid cells to render and when\n * to add styles to the masonry container that maximize scroll performance.\n *\n * @param offset - The vertical space in pixels between the top of the grid container and the top\n *  of the browser `document.documentElement`.\n * @param fps - This determines how often (in frames per second) to update the scroll position of the\n *  browser `window` in state, and as a result the rate the masonry grid recalculates its visible cells.\n *  The default value of `12` has been very reasonable in my own testing, but if you have particularly\n *  heavy `render` components it may be prudent to reduce this number.\n */\n\nexport function useScroller(offset, fps) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (fps === void 0) {\n    fps = 12;\n  }\n\n  const scrollTop = useScrollPosition(fps);\n  const [isScrolling, setIsScrolling] = React.useState(false);\n  const didMount = React.useRef(0);\n  React.useEffect(() => {\n    if (didMount.current === 1) setIsScrolling(true);\n    let didUnsubscribe = false;\n    const to = requestTimeout(() => {\n      if (didUnsubscribe) return; // This is here to prevent premature bail outs while maintaining high resolution\n      // unsets. Without it there will always bee a lot of unnecessary DOM writes to style.\n\n      setIsScrolling(false);\n    }, 40 + 1000 / fps);\n    didMount.current = 1;\n    return () => {\n      didUnsubscribe = true;\n      clearRequestTimeout(to);\n    };\n  }, [fps, scrollTop]);\n  return {\n    scrollTop: Math.max(0, scrollTop - offset),\n    isScrolling\n  };\n}","import { useMasonry } from \"./use-masonry\";\nimport { useScroller } from \"./use-scroller\";\n/**\n * A heavily-optimized component that updates `useMasonry()` when the scroll position of the browser `window`\n * changes. This bare-metal component is used by `<Masonry>` under the hood.\n *\n * @param props\n */\n\nexport function MasonryScroller(props) {\n  // We put this in its own layer because it's the thing that will trigger the most updates\n  // and we don't want to slower ourselves by cycling through all the functions, objects, and effects\n  // of other hooks\n  const {\n    scrollTop,\n    isScrolling\n  } = useScroller(props.offset, props.scrollFps); // This is an update-heavy phase and while we could just Object.assign here,\n  // it is way faster to inline and there's a relatively low hit to he bundle\n  // size.\n\n  return useMasonry({\n    scrollTop,\n    isScrolling,\n    positioner: props.positioner,\n    resizeObserver: props.resizeObserver,\n    items: props.items,\n    onRender: props.onRender,\n    as: props.as,\n    id: props.id,\n    className: props.className,\n    style: props.style,\n    role: props.role,\n    tabIndex: props.tabIndex,\n    containerRef: props.containerRef,\n    itemAs: props.itemAs,\n    itemStyle: props.itemStyle,\n    itemHeightEstimate: props.itemHeightEstimate,\n    itemKey: props.itemKey,\n    overscanBy: props.overscanBy,\n    height: props.height,\n    render: props.render\n  });\n}\n\nif (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n  MasonryScroller.displayName = \"MasonryScroller\";\n}","import React from 'react';\nconst usePassiveLayoutEffect = React[typeof document !== 'undefined' && document.createElement !== void 0 ? 'useLayoutEffect' : 'useEffect'];\nexport default usePassiveLayoutEffect;","import useLayoutEffect from \"@react-hook/passive-layout-effect\";\nimport * as React from \"react\";\n/**\n * A hook for measuring the width of the grid container, as well as its distance\n * from the top of the document. These values are necessary to correctly calculate the number/width\n * of columns to render, as well as the number of rows to render.\n *\n * @param elementRef - A `ref` object created by `React.useRef()`. That ref should be provided to the\n *   `containerRef` property in `useMasonry()`.\n * @param deps - You can force this hook to recalculate the `offset` and `width` whenever this\n *   dependencies list changes. A common dependencies list might look like `[windowWidth, windowHeight]`,\n *   which would force the hook to recalculate any time the size of the browser `window` changed.\n */\n\nexport function useContainerPosition(elementRef, deps) {\n  if (deps === void 0) {\n    deps = emptyArr;\n  }\n\n  const [containerPosition, setContainerPosition] = React.useState({\n    offset: 0,\n    width: 0\n  });\n  useLayoutEffect(() => {\n    const {\n      current\n    } = elementRef;\n\n    if (current !== null) {\n      let offset = 0;\n      let el = current;\n\n      do {\n        offset += el.offsetTop || 0;\n        el = el.offsetParent;\n      } while (el);\n\n      if (offset !== containerPosition.offset || current.offsetWidth !== containerPosition.width) {\n        setContainerPosition({\n          offset,\n          width: current.offsetWidth\n        });\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, deps);\n  return containerPosition;\n}\nconst emptyArr = [];","const RED = 0;\nconst BLACK = 1;\nconst NIL = 2;\nconst DELETE = 0;\nconst KEEP = 1;\n\nfunction addInterval(treeNode, high, index) {\n  let node = treeNode.list;\n  let prevNode;\n\n  while (node) {\n    if (node.index === index) return false;\n    if (high > node.high) break;\n    prevNode = node;\n    node = node.next;\n  }\n\n  if (!prevNode) treeNode.list = {\n    index,\n    high,\n    next: node\n  };\n  if (prevNode) prevNode.next = {\n    index,\n    high,\n    next: prevNode.next\n  };\n  return true;\n}\n\nfunction removeInterval(treeNode, index) {\n  let node = treeNode.list;\n\n  if (node.index === index) {\n    if (node.next === null) return DELETE;\n    treeNode.list = node.next;\n    return KEEP;\n  }\n\n  let prevNode = node;\n  node = node.next;\n\n  while (node !== null) {\n    if (node.index === index) {\n      prevNode.next = node.next;\n      return KEEP;\n    }\n\n    prevNode = node;\n    node = node.next;\n  }\n}\n\nconst NULL_NODE = {\n  low: 0,\n  max: 0,\n  high: 0,\n  C: NIL,\n  // @ts-expect-error\n  P: undefined,\n  // @ts-expect-error\n  R: undefined,\n  // @ts-expect-error\n  L: undefined,\n  // @ts-expect-error\n  list: undefined\n};\nNULL_NODE.P = NULL_NODE;\nNULL_NODE.L = NULL_NODE;\nNULL_NODE.R = NULL_NODE;\n\nfunction updateMax(node) {\n  const max = node.high;\n  if (node.L === NULL_NODE && node.R === NULL_NODE) node.max = max;else if (node.L === NULL_NODE) node.max = Math.max(node.R.max, max);else if (node.R === NULL_NODE) node.max = Math.max(node.L.max, max);else node.max = Math.max(Math.max(node.L.max, node.R.max), max);\n}\n\nfunction updateMaxUp(node) {\n  let x = node;\n\n  while (x.P !== NULL_NODE) {\n    updateMax(x.P);\n    x = x.P;\n  }\n}\n\nfunction rotateLeft(tree, x) {\n  if (x.R === NULL_NODE) return;\n  const y = x.R;\n  x.R = y.L;\n  if (y.L !== NULL_NODE) y.L.P = x;\n  y.P = x.P;\n  if (x.P === NULL_NODE) tree.root = y;else {\n    if (x === x.P.L) x.P.L = y;else x.P.R = y;\n  }\n  y.L = x;\n  x.P = y;\n  updateMax(x);\n  updateMax(y);\n}\n\nfunction rotateRight(tree, x) {\n  if (x.L === NULL_NODE) return;\n  const y = x.L;\n  x.L = y.R;\n  if (y.R !== NULL_NODE) y.R.P = x;\n  y.P = x.P;\n  if (x.P === NULL_NODE) tree.root = y;else {\n    if (x === x.P.R) x.P.R = y;else x.P.L = y;\n  }\n  y.R = x;\n  x.P = y;\n  updateMax(x);\n  updateMax(y);\n}\n\nfunction replaceNode(tree, x, y) {\n  if (x.P === NULL_NODE) tree.root = y;else if (x === x.P.L) x.P.L = y;else x.P.R = y;\n  y.P = x.P;\n}\n\nfunction fixRemove(tree, x) {\n  let w;\n\n  while (x !== NULL_NODE && x.C === BLACK) {\n    if (x === x.P.L) {\n      w = x.P.R;\n\n      if (w.C === RED) {\n        w.C = BLACK;\n        x.P.C = RED;\n        rotateLeft(tree, x.P);\n        w = x.P.R;\n      }\n\n      if (w.L.C === BLACK && w.R.C === BLACK) {\n        w.C = RED;\n        x = x.P;\n      } else {\n        if (w.R.C === BLACK) {\n          w.L.C = BLACK;\n          w.C = RED;\n          rotateRight(tree, w);\n          w = x.P.R;\n        }\n\n        w.C = x.P.C;\n        x.P.C = BLACK;\n        w.R.C = BLACK;\n        rotateLeft(tree, x.P);\n        x = tree.root;\n      }\n    } else {\n      w = x.P.L;\n\n      if (w.C === RED) {\n        w.C = BLACK;\n        x.P.C = RED;\n        rotateRight(tree, x.P);\n        w = x.P.L;\n      }\n\n      if (w.R.C === BLACK && w.L.C === BLACK) {\n        w.C = RED;\n        x = x.P;\n      } else {\n        if (w.L.C === BLACK) {\n          w.R.C = BLACK;\n          w.C = RED;\n          rotateLeft(tree, w);\n          w = x.P.L;\n        }\n\n        w.C = x.P.C;\n        x.P.C = BLACK;\n        w.L.C = BLACK;\n        rotateRight(tree, x.P);\n        x = tree.root;\n      }\n    }\n  }\n\n  x.C = BLACK;\n}\n\nfunction minimumTree(x) {\n  while (x.L !== NULL_NODE) x = x.L;\n\n  return x;\n}\n\nfunction fixInsert(tree, z) {\n  let y;\n\n  while (z.P.C === RED) {\n    if (z.P === z.P.P.L) {\n      y = z.P.P.R;\n\n      if (y.C === RED) {\n        z.P.C = BLACK;\n        y.C = BLACK;\n        z.P.P.C = RED;\n        z = z.P.P;\n      } else {\n        if (z === z.P.R) {\n          z = z.P;\n          rotateLeft(tree, z);\n        }\n\n        z.P.C = BLACK;\n        z.P.P.C = RED;\n        rotateRight(tree, z.P.P);\n      }\n    } else {\n      y = z.P.P.L;\n\n      if (y.C === RED) {\n        z.P.C = BLACK;\n        y.C = BLACK;\n        z.P.P.C = RED;\n        z = z.P.P;\n      } else {\n        if (z === z.P.L) {\n          z = z.P;\n          rotateRight(tree, z);\n        }\n\n        z.P.C = BLACK;\n        z.P.P.C = RED;\n        rotateLeft(tree, z.P.P);\n      }\n    }\n  }\n\n  tree.root.C = BLACK;\n}\n\nexport function createIntervalTree() {\n  const tree = {\n    root: NULL_NODE,\n    size: 0\n  }; // we know these indexes are a consistent, safe way to make look ups\n  // for our case so it's a solid O(1) alternative to\n  // the O(log n) searchNode() in typical interval trees\n\n  const indexMap = {};\n  return {\n    insert(low, high, index) {\n      let x = tree.root;\n      let y = NULL_NODE;\n\n      while (x !== NULL_NODE) {\n        y = x;\n        if (low === y.low) break;\n        if (low < x.low) x = x.L;else x = x.R;\n      }\n\n      if (low === y.low && y !== NULL_NODE) {\n        if (!addInterval(y, high, index)) return;\n        y.high = Math.max(y.high, high);\n        updateMax(y);\n        updateMaxUp(y);\n        indexMap[index] = y;\n        tree.size++;\n        return;\n      }\n\n      const z = {\n        low,\n        high,\n        max: high,\n        C: RED,\n        P: y,\n        L: NULL_NODE,\n        R: NULL_NODE,\n        list: {\n          index,\n          high,\n          next: null\n        }\n      };\n\n      if (y === NULL_NODE) {\n        tree.root = z;\n      } else {\n        if (z.low < y.low) y.L = z;else y.R = z;\n        updateMaxUp(z);\n      }\n\n      fixInsert(tree, z);\n      indexMap[index] = z;\n      tree.size++;\n    },\n\n    remove(index) {\n      const z = indexMap[index];\n      if (z === void 0) return;\n      delete indexMap[index];\n      const intervalResult = removeInterval(z, index);\n      if (intervalResult === void 0) return;\n\n      if (intervalResult === KEEP) {\n        z.high = z.list.high;\n        updateMax(z);\n        updateMaxUp(z);\n        tree.size--;\n        return;\n      }\n\n      let y = z;\n      let originalYColor = y.C;\n      let x;\n\n      if (z.L === NULL_NODE) {\n        x = z.R;\n        replaceNode(tree, z, z.R);\n      } else if (z.R === NULL_NODE) {\n        x = z.L;\n        replaceNode(tree, z, z.L);\n      } else {\n        y = minimumTree(z.R);\n        originalYColor = y.C;\n        x = y.R;\n\n        if (y.P === z) {\n          x.P = y;\n        } else {\n          replaceNode(tree, y, y.R);\n          y.R = z.R;\n          y.R.P = y;\n        }\n\n        replaceNode(tree, z, y);\n        y.L = z.L;\n        y.L.P = y;\n        y.C = z.C;\n      }\n\n      updateMax(x);\n      updateMaxUp(x);\n      if (originalYColor === BLACK) fixRemove(tree, x);\n      tree.size--;\n    },\n\n    search(low, high, callback) {\n      const stack = [tree.root];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node === NULL_NODE || low > node.max) continue;\n        if (node.L !== NULL_NODE) stack.push(node.L);\n        if (node.R !== NULL_NODE) stack.push(node.R);\n\n        if (node.low <= high && node.high >= low) {\n          let curr = node.list;\n\n          while (curr !== null) {\n            if (curr.high >= low) callback(curr.index, node.low);\n            curr = curr.next;\n          }\n        }\n      }\n    },\n\n    get size() {\n      return tree.size;\n    }\n\n  };\n}","import * as React from \"react\";\nimport { createIntervalTree } from \"./interval-tree\";\n/**\n * This hook creates the grid cell positioner and cache required by `useMasonry()`. This is\n * the meat of the grid's layout algorithm, determining which cells to render at a given scroll\n * position, as well as where to place new items in the grid.\n *\n * @param options - Properties that determine the number of columns in the grid, as well\n *  as their widths.\n * @param options.columnWidth\n * @param options.width\n * @param deps - This hook will create a new positioner, clearing all existing cached positions,\n *  whenever the dependencies in this list change.\n * @param options.columnGutter\n * @param options.rowGutter\n * @param options.columnCount\n * @param options.maxColumnCount\n */\n\nexport function usePositioner(_ref, deps) {\n  let {\n    width,\n    columnWidth = 200,\n    columnGutter = 0,\n    rowGutter,\n    columnCount,\n    maxColumnCount\n  } = _ref;\n\n  if (deps === void 0) {\n    deps = emptyArr;\n  }\n\n  const initPositioner = () => {\n    const [computedColumnWidth, computedColumnCount] = getColumns(width, columnWidth, columnGutter, columnCount, maxColumnCount);\n    return createPositioner(computedColumnCount, computedColumnWidth, columnGutter, rowGutter !== null && rowGutter !== void 0 ? rowGutter : columnGutter);\n  };\n\n  const positionerRef = React.useRef();\n  if (positionerRef.current === undefined) positionerRef.current = initPositioner();\n  const prevDeps = React.useRef(deps);\n  const opts = [width, columnWidth, columnGutter, rowGutter, columnCount, maxColumnCount];\n  const prevOpts = React.useRef(opts);\n  const optsChanged = !opts.every((item, i) => prevOpts.current[i] === item);\n\n  if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n    if (deps.length !== prevDeps.current.length) {\n      throw new Error(\"usePositioner(): The length of your dependencies array changed.\");\n    }\n  } // Create a new positioner when the dependencies or sizes change\n  // Thanks to https://github.com/khmm12 for pointing this out\n  // https://github.com/jaredLunde/masonic/pull/41\n\n\n  if (optsChanged || !deps.every((item, i) => prevDeps.current[i] === item)) {\n    const prevPositioner = positionerRef.current;\n    const positioner = initPositioner();\n    prevDeps.current = deps;\n    prevOpts.current = opts;\n\n    if (optsChanged) {\n      const cacheSize = prevPositioner.size();\n\n      for (let index = 0; index < cacheSize; index++) {\n        const pos = prevPositioner.get(index);\n        positioner.set(index, pos !== void 0 ? pos.height : 0);\n      }\n    }\n\n    positionerRef.current = positioner;\n  }\n\n  return positionerRef.current;\n}\n\n/**\n * Creates a cell positioner for the `useMasonry()` hook. The `usePositioner()` hook uses\n * this utility under the hood.\n *\n * @param columnCount - The number of columns in the grid\n * @param columnWidth - The width of each column in the grid\n * @param columnGutter - The amount of horizontal space between columns in pixels.\n * @param rowGutter - The amount of vertical space between cells within a column in pixels (falls back\n * to `columnGutter`).\n */\nexport const createPositioner = function (columnCount, columnWidth, columnGutter, rowGutter) {\n  if (columnGutter === void 0) {\n    columnGutter = 0;\n  }\n\n  if (rowGutter === void 0) {\n    rowGutter = columnGutter;\n  }\n\n  // O(log(n)) lookup of cells to render for a given viewport size\n  // Store tops and bottoms of each cell for fast intersection lookup.\n  const intervalTree = createIntervalTree(); // Track the height of each column.\n  // Layout algorithm below always inserts into the shortest column.\n\n  const columnHeights = new Array(columnCount); // Used for O(1) item access\n\n  const items = []; // Tracks the item indexes within an individual column\n\n  const columnItems = new Array(columnCount);\n\n  for (let i = 0; i < columnCount; i++) {\n    columnHeights[i] = 0;\n    columnItems[i] = [];\n  }\n\n  return {\n    columnCount,\n    columnWidth,\n    set: function (index, height) {\n      if (height === void 0) {\n        height = 0;\n      }\n\n      let column = 0; // finds the shortest column and uses it\n\n      for (let i = 1; i < columnHeights.length; i++) {\n        if (columnHeights[i] < columnHeights[column]) column = i;\n      }\n\n      const top = columnHeights[column] || 0;\n      columnHeights[column] = top + height + rowGutter;\n      columnItems[column].push(index);\n      items[index] = {\n        left: column * (columnWidth + columnGutter),\n        top,\n        height,\n        column\n      };\n      intervalTree.insert(top, top + height, index);\n    },\n    get: index => items[index],\n    // This only updates items in the specific columns that have changed, on and after the\n    // specific items that have changed\n    update: updates => {\n      const columns = new Array(columnCount);\n      let i = 0,\n          j = 0; // determines which columns have items that changed, as well as the minimum index\n      // changed in that column, as all items after that index will have their positions\n      // affected by the change\n\n      for (; i < updates.length - 1; i++) {\n        const index = updates[i];\n        const item = items[index];\n        item.height = updates[++i];\n        intervalTree.remove(index);\n        intervalTree.insert(item.top, item.top + item.height, index);\n        columns[item.column] = columns[item.column] === void 0 ? index : Math.min(index, columns[item.column]);\n      }\n\n      for (i = 0; i < columns.length; i++) {\n        // bails out if the column didn't change\n        if (columns[i] === void 0) continue;\n        const itemsInColumn = columnItems[i]; // the index order is sorted with certainty so binary search is a great solution\n        // here as opposed to Array.indexOf()\n\n        const startIndex = binarySearch(itemsInColumn, columns[i]);\n        const index = columnItems[i][startIndex];\n        const startItem = items[index];\n        columnHeights[i] = startItem.top + startItem.height + rowGutter;\n\n        for (j = startIndex + 1; j < itemsInColumn.length; j++) {\n          const index = itemsInColumn[j];\n          const item = items[index];\n          item.top = columnHeights[i];\n          columnHeights[i] = item.top + item.height + rowGutter;\n          intervalTree.remove(index);\n          intervalTree.insert(item.top, item.top + item.height, index);\n        }\n      }\n    },\n    // Render all cells visible within the viewport range defined.\n    range: (lo, hi, renderCallback) => intervalTree.search(lo, hi, (index, top) => renderCallback(index, items[index].left, top)),\n    estimateHeight: (itemCount, defaultItemHeight) => {\n      const tallestColumn = Math.max(0, Math.max.apply(null, columnHeights));\n      return itemCount === intervalTree.size ? tallestColumn : tallestColumn + Math.ceil((itemCount - intervalTree.size) / columnCount) * defaultItemHeight;\n    },\n    shortestColumn: () => {\n      if (columnHeights.length > 1) return Math.min.apply(null, columnHeights);\n      return columnHeights[0] || 0;\n    },\n\n    size() {\n      return intervalTree.size;\n    },\n\n    all() {\n      return items;\n    }\n\n  };\n};\n\n/* istanbul ignore next */\nconst binarySearch = (a, y) => {\n  let l = 0;\n  let h = a.length - 1;\n\n  while (l <= h) {\n    const m = l + h >>> 1;\n    const x = a[m];\n    if (x === y) return m;else if (x <= y) l = m + 1;else h = m - 1;\n  }\n\n  return -1;\n};\n\nconst getColumns = function (width, minimumWidth, gutter, columnCount, maxColumnCount) {\n  if (width === void 0) {\n    width = 0;\n  }\n\n  if (minimumWidth === void 0) {\n    minimumWidth = 0;\n  }\n\n  if (gutter === void 0) {\n    gutter = 8;\n  }\n\n  columnCount = columnCount || Math.min(Math.floor((width + gutter) / (minimumWidth + gutter)), maxColumnCount || Infinity) || 1;\n  const columnWidth = Math.floor((width - gutter * (columnCount - 1)) / columnCount);\n  return [columnWidth, columnCount];\n};\n\nconst emptyArr = [];","var resizeObservers = [];\nexport { resizeObservers };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","export var freeze = function (obj) { return Object.freeze(obj); };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n","import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","var rafSchd = function rafSchd(fn) {\n  var lastArgs = [];\n  var frameId = null;\n\n  var wrapperFn = function wrapperFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n\n    if (frameId) {\n      return;\n    }\n\n    frameId = requestAnimationFrame(function () {\n      frameId = null;\n      fn.apply(void 0, lastArgs);\n    });\n  };\n\n  wrapperFn.cancel = function () {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n\nexport default rafSchd;\n","import { ResizeObserver as Polyfill } from \"@juggle/resize-observer\";\nimport rafSchd from \"raf-schd\";\nimport * as React from \"react\";\nimport trieMemoize from \"trie-memoize\";\nimport { elementsCache } from \"./elements-cache\";\nimport { useForceUpdate } from \"./use-force-update\";\nconst ResizeObserver = typeof window !== \"undefined\" && \"ResizeObserver\" in window ? window.ResizeObserver : Polyfill;\n/**\n * Creates a resize observer that forces updates to the grid cell positions when mutations are\n * made to cells affecting their height.\n *\n * @param positioner - The masonry cell positioner created by the `usePositioner()` hook.\n */\n\nexport function useResizeObserver(positioner) {\n  const forceUpdate = useForceUpdate();\n  const resizeObserver = createResizeObserver(positioner, forceUpdate); // Cleans up the resize observers when they change or the\n  // component unmounts\n\n  function _ref() {\n    return resizeObserver.disconnect();\n  }\n\n  React.useEffect(() => _ref, [resizeObserver]);\n  return resizeObserver;\n}\n\nconst _handlerForType = /*#__PURE__*/rafSchd(target => {});\n\nfunction _ref2(handler) {\n  handler.cancel();\n}\n\n/**\n * Creates a resize observer that fires an `updater` callback whenever the height of\n * one or many cells change. The `useResizeObserver()` hook is using this under the hood.\n *\n * @param positioner - A cell positioner created by the `usePositioner()` hook or the `createPositioner()` utility\n * @param updater - A callback that fires whenever one or many cell heights change.\n */\nexport const createResizeObserver = /*#__PURE__*/trieMemoize([WeakMap], // TODO: figure out a way to test this\n\n/* istanbul ignore next */\n(positioner, updater) => {\n  const updates = [];\n  const update = rafSchd(() => {\n    if (updates.length > 0) {\n      // Updates the size/positions of the cell with the resize\n      // observer updates\n      positioner.update(updates);\n      updater(updates);\n    }\n\n    updates.length = 0;\n  });\n\n  const commonHandler = target => {\n    const height = target.offsetHeight;\n\n    if (height > 0) {\n      const index = elementsCache.get(target);\n\n      if (index !== void 0) {\n        const position = positioner.get(index);\n        if (position !== void 0 && height !== position.height) updates.push(index, height);\n      }\n    }\n\n    update();\n  };\n\n  const handlers = new Map();\n\n  const handleEntries = entries => {\n    let i = 0;\n\n    for (; i < entries.length; i++) {\n      const entry = entries[i];\n      const index = elementsCache.get(entry.target);\n      if (index === void 0) continue;\n      let handler = handlers.get(index);\n\n      if (!handler) {\n        handler = rafSchd(commonHandler);\n        handlers.set(index, handler);\n      }\n\n      handler(entry.target);\n    }\n  };\n\n  const ro = new ResizeObserver(handleEntries); // Overrides the original disconnect to include cancelling handling the entries.\n  // Ideally this would be its own method but that would result in a breaking\n  // change.\n\n  const disconnect = ro.disconnect.bind(ro);\n\n  ro.disconnect = () => {\n    disconnect();\n    handlers.forEach(_ref2);\n  };\n\n  return ro;\n});","import useEvent from \"@react-hook/event\";\nimport useLatest from \"@react-hook/latest\";\nimport { useThrottleCallback } from \"@react-hook/throttle\";\nimport * as React from \"react\";\n\n/**\n * A hook that creates a callback for scrolling to a specific index in\n * the \"items\" array.\n *\n * @param positioner - A positioner created by the `usePositioner()` hook\n * @param options - Configuration options\n */\nexport function useScrollToIndex(positioner, options) {\n  var _latestOptions$curren;\n\n  const {\n    align = \"top\",\n    element = typeof window !== \"undefined\" && window,\n    offset = 0,\n    height = typeof window !== \"undefined\" ? window.innerHeight : 0\n  } = options;\n  const latestOptions = useLatest({\n    positioner,\n    element,\n    align,\n    offset,\n    height\n  });\n  const getTarget = React.useRef(() => {\n    const latestElement = latestOptions.current.element;\n    return latestElement && \"current\" in latestElement ? latestElement.current : latestElement;\n  }).current;\n  const [state, dispatch] = React.useReducer((state, action) => {\n    const nextState = {\n      position: state.position,\n      index: state.index,\n      prevTop: state.prevTop\n    };\n    /* istanbul ignore next */\n\n    if (action.type === \"scrollToIndex\") {\n      var _action$value;\n\n      return {\n        position: latestOptions.current.positioner.get((_action$value = action.value) !== null && _action$value !== void 0 ? _action$value : -1),\n        index: action.value,\n        prevTop: void 0\n      };\n    } else if (action.type === \"setPosition\") {\n      nextState.position = action.value;\n    } else if (action.type === \"setPrevTop\") {\n      nextState.prevTop = action.value;\n    } else if (action.type === \"reset\") {\n      return defaultState;\n    }\n\n    return nextState;\n  }, defaultState);\n  const throttledDispatch = useThrottleCallback(dispatch, 15); // If we find the position along the way we can immediately take off\n  // to the correct spot.\n\n  useEvent(getTarget(), \"scroll\", () => {\n    if (!state.position && state.index) {\n      const position = latestOptions.current.positioner.get(state.index);\n\n      if (position) {\n        dispatch({\n          type: \"setPosition\",\n          value: position\n        });\n      }\n    }\n  }); // If the top changes out from under us in the case of dynamic cells, we\n  // want to keep following it.\n\n  const currentTop = state.index !== void 0 && ((_latestOptions$curren = latestOptions.current.positioner.get(state.index)) === null || _latestOptions$curren === void 0 ? void 0 : _latestOptions$curren.top);\n  React.useEffect(() => {\n    const target = getTarget();\n    if (!target) return;\n    const {\n      height,\n      align,\n      offset,\n      positioner\n    } = latestOptions.current;\n\n    if (state.position) {\n      let scrollTop = state.position.top;\n\n      if (align === \"bottom\") {\n        scrollTop = scrollTop - height + state.position.height;\n      } else if (align === \"center\") {\n        scrollTop -= (height - state.position.height) / 2;\n      }\n\n      target.scrollTo(0, Math.max(0, scrollTop += offset)); // Resets state after 400ms, an arbitrary time I determined to be\n      // still visually pleasing if there is a slow network reply in dynamic\n      // cells\n\n      let didUnsubscribe = false;\n      const timeout = setTimeout(() => !didUnsubscribe && dispatch({\n        type: \"reset\"\n      }), 400);\n      return () => {\n        didUnsubscribe = true;\n        clearTimeout(timeout);\n      };\n    } else if (state.index !== void 0) {\n      // Estimates the top based upon the average height of current cells\n      let estimatedTop = positioner.shortestColumn() / positioner.size() * state.index;\n      if (state.prevTop) estimatedTop = Math.max(estimatedTop, state.prevTop + height);\n      target.scrollTo(0, estimatedTop);\n      throttledDispatch({\n        type: \"setPrevTop\",\n        value: estimatedTop\n      });\n    }\n  }, [currentTop, state, latestOptions, getTarget, throttledDispatch]);\n  return React.useRef(index => {\n    dispatch({\n      type: \"scrollToIndex\",\n      value: index\n    });\n  }).current;\n}\nconst defaultState = {\n  index: void 0,\n  position: void 0,\n  prevTop: void 0\n};","import { useWindowSize } from \"@react-hook/window-size\";\nimport * as React from \"react\";\nconst __reactCreateElement__ = React.createElement;\nimport { MasonryScroller } from \"./masonry-scroller\";\nimport { useContainerPosition } from \"./use-container-position\";\nimport { usePositioner } from \"./use-positioner\";\nimport { useResizeObserver } from \"./use-resize-observer\";\nimport { useScrollToIndex } from \"./use-scroll-to-index\";\n\n/**\n * A \"batteries included\" masonry grid which includes all of the implementation details below. This component is the\n * easiest way to get off and running in your app, before switching to more advanced implementations, if necessary.\n * It will change its column count to fit its container's width and will decide how many rows to render based upon\n * the height of the browser `window`.\n *\n * @param props\n */\nexport function Masonry(props) {\n  const containerRef = React.useRef(null);\n  const windowSize = useWindowSize({\n    initialWidth: props.ssrWidth,\n    initialHeight: props.ssrHeight\n  });\n  const containerPos = useContainerPosition(containerRef, windowSize);\n  const nextProps = Object.assign({\n    offset: containerPos.offset,\n    width: containerPos.width || windowSize[0],\n    height: windowSize[1],\n    containerRef\n  }, props);\n  nextProps.positioner = usePositioner(nextProps);\n  nextProps.resizeObserver = useResizeObserver(nextProps.positioner);\n  const scrollToIndex = useScrollToIndex(nextProps.positioner, {\n    height: nextProps.height,\n    offset: containerPos.offset,\n    align: typeof props.scrollToIndex === \"object\" ? props.scrollToIndex.align : void 0\n  });\n  const index = props.scrollToIndex && (typeof props.scrollToIndex === \"number\" ? props.scrollToIndex : props.scrollToIndex.index);\n  React.useEffect(() => {\n    if (index !== void 0) scrollToIndex(index);\n  }, [index, scrollToIndex]);\n  return __reactCreateElement__(MasonryScroller, nextProps);\n}\n\nif (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n  Masonry.displayName = \"Masonry\";\n}"],"names":["current","storedValue","React","useDebounceCallback","callback","wait","arguments","length","undefined","leading","storedCallback","useLatest","timeout","deps","_ref","clearTimeout","_ref2","args","setTimeout","apply","target","type","listener","cleanup","storedListener","storedCleanup","targetEl","didUnsubscribe","_len","Array","_key","this","addEventListener","removeEventListener","emptyObj","win","window","wv","visualViewport","getSize","document","documentElement","clientWidth","clientHeight","useWindowSize","options","initialWidth","initialHeight","size","setDebouncedSize","useDebounce","initialState","state","setSize","useEvent","memoOne","fn","areEqual","equal","defaultAreEqual","value","prev","constructor","key","val","set","get","k","v","createCache","obj","e","cache","memoize","mapConstructors","item","g","s","constructors","depth","baseCache","base","map","i","node","one","s1","s2","memo","elementsCache","WeakMap","useForceUpdate","setState","__reactCreateElement__","didEverMount","createRenderElement","trieMemoize","OneKeyMap","RenderComponent","index","data","columnWidth","width","getContainerStyle","memoizeOne","isScrolling","estimateHeight","position","maxWidth","height","Math","ceil","maxHeight","willChange","pointerEvents","cmp2","pargs","assignUserStyle","containerStyle","userStyle","Object","assign","defaultGetItemKey","_","getCachedSize","zIndex","visibility","writingMode","getRefSetter","positioner","resizeObserver","el","observe","offsetHeight","u","p","performance","Date","now","af","Caf","Raf","raf","bind","caf","lastTime","curr","next","max","h","requestTimeout","ms","start","handle","loop","call","perf","useThrottleCallback","fps","trailingTimeout","clearTrailing","rightNow","useThrottle","getScrollY","scrollY","pageYOffset","useScroller","offset","scrollTop","useScrollPosition","setIsScrolling","didMount","to","MasonryScroller","props","scrollFps","stopIndex","items","as","ContainerComponent","id","className","style","role","tabIndex","containerRef","itemAs","ItemComponent","itemStyle","itemHeightEstimate","itemKey","overscanBy","render","onRender","startIndex","forceUpdate","setItemRef","itemCount","columnCount","range","shortestColumn","measuredCount","shortestColumnSize","children","itemRole","storedOnRender","rangeEnd","needsFreshBatch","left","top","phaseTwoStyle","push","ref","min","batchSize","phaseOneStyle","useMasonry","createElement","emptyArr","NULL_NODE","low","high","C","P","R","L","list","updateMax","updateMaxUp","x","rotateLeft","tree","y","root","rotateRight","replaceNode","createIntervalTree","indexMap","insert","treeNode","prevNode","addInterval","z","fixInsert","remove","intervalResult","removeInterval","originalYColor","minimumTree","w","fixRemove","search","stack","pop","createPositioner","columnGutter","rowGutter","intervalTree","columnHeights","columnItems","column","update","updates","columns","j","itemsInColumn","binarySearch","startItem","lo","hi","renderCallback","defaultItemHeight","tallestColumn","all","a","l","m","getColumns","minimumWidth","gutter","maxColumnCount","floor","Infinity","ResizeObserverBoxOptions","resizeObservers","msg","trigger","freeze","ResizeObserverSize","inlineSize","blockSize","DOMRectReadOnly","bottom","right","prototype","toJSON","_a","fromRect","rectangle","isSVG","SVGElement","isHidden","getBBox","_b","offsetWidth","getClientRects","isElement","Element","scope","ownerDocument","defaultView","global","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","forceRecalculation","has","cs","getComputedStyle","svg","ownerSVGElement","removePadding","boxSizing","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","verticalScrollbarThickness","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","round","devicePixelRatio","calculateBoxSize","observedBox","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX","ResizeObserverEntry","calculateDepthForNode","parent","parentNode","broadcastActiveObservations","shallowestDepth","callbacks","forEach","ro","activeTargets","entries","ot","entry","targetDepth","lastReportedSize","observer","splice","_i","callbacks_1","gatherActiveObservationsAtDepth","skippedTargets","observationTargets","isActive","process","some","event","ErrorEvent","message","createEvent","initEvent","dispatchEvent","deliverResizeLoopError","queueMicroTask","toggle_1","el_1","createTextNode","MutationObserver","cb","characterData","textContent","concat","watching","observerConfig","attributes","childList","subtree","events","time","scheduled","scheduler","Scheduler","_this","stopped","schedule","run","until","elementsHaveResized","requestAnimationFrame","stop","body","name","disconnect","updateCount","n","ResizeObservation","CONTENT_BOX","tagName","isReplacedElement","display","ResizeObserverDetail","observerMap","getObservationIndex","ResizeObserverController","connect","detail","firstObservation","box","unobserve","lastObservation","indexOf","slice","ResizeObserver","TypeError","toString","lastArgs","frameId","wrapperFn","cancel","cancelAnimationFrame","Polyfill","handler","createResizeObserver","updater","rafSchd","commonHandler","handlers","Map","defaultState","prevTop","Masonry","windowSize","ssrWidth","ssrHeight","containerPos","elementRef","containerPosition","setContainerPosition","useLayoutEffect","offsetTop","offsetParent","useContainerPosition","nextProps","initPositioner","computedColumnWidth","computedColumnCount","positionerRef","prevDeps","opts","prevOpts","optsChanged","every","prevPositioner","cacheSize","pos","usePositioner","useResizeObserver","scrollToIndex","_latestOptions$curren","align","element","innerHeight","latestOptions","getTarget","latestElement","dispatch","action","nextState","_action$value","throttledDispatch","currentTop","scrollTo","estimatedTop","useScrollToIndex"],"sourceRoot":""}